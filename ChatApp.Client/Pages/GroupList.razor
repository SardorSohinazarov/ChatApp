@page "/groups";
@using ChatApp.Client.Models;
@inject HttpClient Http;
@using System.Security.Claims;
@using System.Net.Http.Headers;
@using ChatApp.Client.Models.ViewModels;
@inject NavigationManager NavigationManager;

<h3>GroupList</h3>

@foreach(var group in _groups)
{
    var groupLink = $"/groups/{group.ChatLink}";
    
        <a href="@groupLink">
            <p>@group.FirstName @group.LastName</p>
        </a>
    <br />
}

@code {
    [CascadingParameter(Name = "AuthenticationState")]
    public AuthenticationState _authenticationState { get; set; }

    private List<UserViewModel> _groups = new List<UserViewModel>();

    protected override async void OnInitialized()
    {
        base.OnInitialized();
        if (!_authenticationState.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/");

        }
        else
        {
            try
            {
                string token = _authenticationState.Token;
                Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

                var groupsTask = Http.GetFromJsonAsync<List<UserViewModel>>("https://localhost:7183/api/Users");

                var listOfGroups = await groupsTask;

                if(listOfGroups is not null)
                {
                    _groups = listOfGroups;
                }

                StateHasChanged();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error loading user groups: {ex.Message}");
            }
        }
    }
}
